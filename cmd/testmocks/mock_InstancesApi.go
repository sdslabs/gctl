// Code generated by MockGen. DO NOT EDIT.
// Source: instances.go

// Package testmocks is a generated GoMock package.
package testmocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	openapi "github.com/sdslabs/gctl/client"
	http "net/http"
	reflect "reflect"
)

// MockInstancesAPIService is a mock of InstancesAPIService interface
type MockInstancesAPIService struct {
	ctrl     *gomock.Controller
	recorder *MockInstancesAPIServiceMockRecorder
}

// MockInstancesAPIServiceMockRecorder is the mock recorder for MockInstancesAPIService
type MockInstancesAPIServiceMockRecorder struct {
	mock *MockInstancesAPIService
}

// NewMockInstancesAPIService creates a new mock instance
func NewMockInstancesAPIService(ctrl *gomock.Controller) *MockInstancesAPIService {
	mock := &MockInstancesAPIService{ctrl: ctrl}
	mock.recorder = &MockInstancesAPIServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInstancesAPIService) EXPECT() *MockInstancesAPIServiceMockRecorder {
	return m.recorder
}

// FetchIntancesByUser mocks base method
func (m *MockInstancesAPIService) FetchIntancesByUser(ctx context.Context) (openapi.InlineResponse2001, *http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchIntancesByUser", ctx)
	ret0, _ := ret[0].(openapi.InlineResponse2001)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// FetchIntancesByUser indicates an expected call of FetchIntancesByUser
func (mr *MockInstancesAPIServiceMockRecorder) FetchIntancesByUser(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchIntancesByUser", reflect.TypeOf((*MockInstancesAPIService)(nil).FetchIntancesByUser), ctx)
}
